buildscript {
	ext {
		springBootVersion = '1.5.7.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

plugins {
	id 'net.ltgt.apt' version '0.9'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'

group = 'com.gustavoblima'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
ext {
	mapstructVersion = "1.2.0.CR1"
}

repositories {
	mavenCentral()
}


processResources {
	expand(project.properties)
}


dependencies {
    compile "org.mapstruct:mapstruct-jdk8:${mapstructVersion}"
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-web')
	runtime('com.h2database:h2')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.security:spring-security-test')
	apt "org.mapstruct:mapstruct-processor:${mapstructVersion}"

}


def generatedSources = "$buildDir/generated"
def generatedOutputDir = file("$generatedSources")

/*
 create generated .java files in different folder than classes
 In IntelliJ 2016.3.x: Enable Annotation Processing, then set generated sources,
 relative to module output dir, at path '../../generated'
 */
compileJava {
	doFirst {
		generatedOutputDir.exists() || generatedOutputDir.mkdirs()
		options.compilerArgs = [
				'-s', "${generatedSources}"
		]
	}
}

task stage(dependsOn: ['build', 'clean'])
build.mustRunAfter clean

idea {
	module {
		downloadSources = true
		// tell intellij where to find generated sources
		sourceDirs += generatedOutputDir
	}
}
